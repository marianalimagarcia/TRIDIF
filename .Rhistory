shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
frase  = ""
frase += "<div>"
print(frase)
frase = ""
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='mariana-garcia', token='5B5CF144EDC5E8C1AF6CC85B647642CE', secret='bk1pnl2AO/Yj2OK4MDGLjU7p3nC6zR5c1QxTgJFz')
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1", appName = "TRIDIF")
rsconnect::setAccountInfo(name='mariana-garcia', token='5B5CF144EDC5E8C1AF6CC85B647642CE', secret='bk1pnl2AO/Yj2OK4MDGLjU7p3nC6zR5c1QxTgJFz')
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1", appName = "TRIDIF")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
txt1 = "Após o cálculo do modelo, os dados { TIPO } da matriz de entrada são juntados às estimativas dos
traços latentes dos respondentes e podem ser gravados num arquivo CSV para download aqui"
str_glue (txt1, TIPO="DICOTÔMICOS")
txt1 = str_glue (txt1, TIPO="DICOTÔMICOS")
txt1
runApp()
runApp()
runApp()
txt1 = "Após o cálculo do modelo { TIPO } '{ MODELO }', os dados da matriz de entrada são juntados às estimativas dos
traços latentes dos respondentes e podem ser exportados num arquivo CSV para download aqui."
txt1 <- str_glue (txt1, TIPO="dicotômico")
v= c("RASCH"                           = "Rasch",
"Logístico de 1 parâmetro  (1PL)" = "1PL",
"Logístico de 2 parâmetros (2PL)" = "2PL",
"Logístico de 3 parâmetros (3PL)" = "3PL",
"Logístico de 4 parâmetros (4PL)" = "4PL")),
v= c("RASCH"                           = "Rasch",
"Logístico de 1 parâmetro  (1PL)" = "1PL",
"Logístico de 2 parâmetros (2PL)" = "2PL",
"Logístico de 3 parâmetros (3PL)" = "3PL",
"Logístico de 4 parâmetros (4PL)" = "4PL")
v
v[1]
v[12]
v[2]
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
setwd("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='mariana-garcia', token='5B5CF144EDC5E8C1AF6CC85B647642CE', secret='bk1pnl2AO/Yj2OK4MDGLjU7p3nC6zR5c1QxTgJFz')
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1", appName = "TRIDIF")
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1", appName = "TRIDIF", account = "mariana-garcia")
rsconnect::setAccountInfo(name="mariana-garcia", token="5B5CF144EDC5E8C1AF6CC85B647642CE", secret="bk1pnl2AO/Yj2OK4MDGLjU7p3nC6zR5c1QxTgJFz")
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1",appName="TRIDIF",account="mariana-garcia")
rsconnect::setAccountInfo(name='mariana-garcia',token='03B5494660AFC0795FBC009245CDE1A0', secret='/OB92Qjv7qggBHwXHkuK75jehQ7smoKCP4t+Hm6s')
deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1",appName="TRIDIF",account="mariana-garcia")
rsconnect::deployApp("C:/Users/Leite/Google Drive/Desenv/WS RStudio/TRIDIFShiny-nova-interface/v2.1",appName="TRIDIF",account="mariana-garcia")
runApp()
runApp()
?actionButton
?downloadButton
runApp()
?disable
?disable()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tags
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?aceEditor
aceEditor(
outputId = "mySmartEditor",
value = "plot(wt ~ mpg, data = mtcars)",
mode = "r",
autoComplete = "live",
autoCompleteList = list(mtcars = colnames(mtcars))
)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
DF = read.csv(file   = "www/TESTE-VALIDACAO-DICOT-abortoparte2.csv", header=F, sep=",")
DF
colnames(DF) = DF[1,]
print(colnames(DF) = DF[1,])
print(colnames(DF) = DF[1,])
colnames(DF) = DF[1,]
col_grupo    = colnames(DF)[nquest]
nquest       = ncol(DF)
col_grupo    = colnames(DF)[nquest]
col_grupo
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(DF)
View(DF)
View(DF)
View(DF)
View(DF)
cont = data.frame(table(DF[,col]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
?DT
??DT
shiny::runApp()
runApp()
??data.table
??latticeExtra
?latticeExtra
??gridExtra
??shinyBS
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
